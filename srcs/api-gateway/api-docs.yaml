openapi: 3.0.0
info:
  title: API Gateway
  description: API Gateway for routing requests to Inventory and Billing APIs
  version: 1.0.0
paths:
  /api/movies/api/movies:
# Get All Movies
# ----------------------------------------------------------------
    get:
      summary: Get all movies or filter by title
      operationId: getMovies
      parameters:
        - name: title
          in: query
          description: Get movies with the name in the title
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        '400':
          description: Missing or invalid title parameter
        '500':
          description: Error fetching movies
        default:
          description: Unexpected error
# Create Movie
# ----------------------------------------------------------------
    post:
      summary: Create a new movie
      operationId: createMovie
      requestBody:
        description: Movie object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '201':
          description: Movie created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        default:
          description: Unexpected error
# Delete All Movies
# ----------------------------------------------------------------
    delete:
      summary: Delete all movies
      operationId: deleteAllMovies
      responses:
        '204':
          description: All movies deleted
        default:
          description: Unexpected error
# Get Movie By Id
# ----------------------------------------------------------------
  /api/movies/api/movies/{id}:
    get:
      summary: Get movie by id
      operationId: getMovieById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single movie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found
        default:
          description: Unexpected error
# Update Movie By Id
# ----------------------------------------------------------------
    put:
      summary: Update a single movie by id
      operationId: updateMovieById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated movie object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '200':
          description: Movie updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found
        default:
          description: Unexpected error
# Delete Movie By Id
# ----------------------------------------------------------------
    delete:
      summary: Delete a single movie by id
      operationId: deleteMovieById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Movie deleted
        '404':
          description: Movie not found
        default:
          description: Unexpected error

# BILLING
# ----------------------------------------------------------------

  /api/billing:
    post:
      summary: Create a new billing order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                number_of_items:
                  type: string
                total_amount:
                  type: string
      responses:
        '200':
          description: Billing order created
      default:
          description: Unexpected error

components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Inception"
        description:
          type: string
          example: "Christopher Nolan Film about gangsters"

