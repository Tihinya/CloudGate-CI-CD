openapi: 3.0.0
info:
  title: API Gateway
  description: API Gateway for routing requests to Inventory and Billing APIs
  version: 1.0.0
paths:
  /api/movies:
    # Get All Movies
    # ----------------------------------------------------------------
    get:
      summary: Get all movies or filter by title
      operationId: getMovies
      parameters:
        - name: title
          in: query
          description: Get movies with the name in the title
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of movies
        '400':
          description: Missing or invalid title parameter
        '500':
          description: Error fetching movies
        default:
          description: Unexpected error
    # Create Movie
    # ----------------------------------------------------------------
    post:
      summary: Create a new movie
      operationId: createMovie
      requestBody:
        description: Movie object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '201':
          description: Movie created
        default:
          description: Unexpected error
    # Delete All Movies
    # ----------------------------------------------------------------
    delete:
      summary: Delete all movies
      operationId: deleteAllMovies
      responses:
        '204':
          description: All movies deleted
        default:
          description: Unexpected error
  # Get Movie By Id
  # ----------------------------------------------------------------
  /api/movies/{id}:
    get:
      summary: Get movie by id
      operationId: getMovieById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single movie
        '404':
          description: Movie not found
        default:
          description: Unexpected error
    # Update Movie By Id
    # ----------------------------------------------------------------
    put:
      summary: Update a single movie by id
      operationId: updateMovieById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Updated movie object
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "A changed new movie"
                description:
                  type: string
                  example: "Changed very short description"
      responses:
        '200':
          description: Movie updated
        '404':
          description: Movie not found
        default:
          description: Unexpected error
    # Delete Movie By Id
    # ----------------------------------------------------------------
    delete:
      summary: Delete a single movie by id
      operationId: deleteMovieById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Movie deleted
        '404':
          description: Movie not found
        default:
          description: Unexpected error

  # BILLING
  # ----------------------------------------------------------------

  /api/billing:
    post:
      summary: Create a new billing order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Billing'
      responses:
        '200':
          description: Billing order created
      default:
          description: Unexpected error




components:
  schemas:
    Movie:
      type: object
      properties:
        title:
          type: string
          example: "A new movie"
        description:
          type: string
          example: "Very short description"
    Billing:
      type: object
      properties:
        user_id:
          type: string
          example: "20"
        number_of_items:
          type: string
          example: "99"
        total_amount:
          type: string
          example: "250"
